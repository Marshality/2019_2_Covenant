// Code generated by protoc-gen-go. DO NOT EDIT.
// source: session_service.proto

package repository

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRequest struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff25770e79caedc0, []int{0}
}

func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (m *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(m, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type DeleteByIDRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteByIDRequest) Reset()         { *m = DeleteByIDRequest{} }
func (m *DeleteByIDRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteByIDRequest) ProtoMessage()    {}
func (*DeleteByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff25770e79caedc0, []int{1}
}

func (m *DeleteByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteByIDRequest.Unmarshal(m, b)
}
func (m *DeleteByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteByIDRequest.Marshal(b, m, deterministic)
}
func (m *DeleteByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteByIDRequest.Merge(m, src)
}
func (m *DeleteByIDRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteByIDRequest.Size(m)
}
func (m *DeleteByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteByIDRequest proto.InternalMessageInfo

func (m *DeleteByIDRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type Session struct {
	Id                   uint64               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId               uint64               `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Expires              *timestamp.Timestamp `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	Data                 string               `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff25770e79caedc0, []int{2}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Session) GetUserId() uint64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *Session) GetExpires() *timestamp.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *Session) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type SessionArray struct {
	Sessions             []*Session `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SessionArray) Reset()         { *m = SessionArray{} }
func (m *SessionArray) String() string { return proto.CompactTextString(m) }
func (*SessionArray) ProtoMessage()    {}
func (*SessionArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff25770e79caedc0, []int{3}
}

func (m *SessionArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionArray.Unmarshal(m, b)
}
func (m *SessionArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionArray.Marshal(b, m, deterministic)
}
func (m *SessionArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionArray.Merge(m, src)
}
func (m *SessionArray) XXX_Size() int {
	return xxx_messageInfo_SessionArray.Size(m)
}
func (m *SessionArray) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionArray.DiscardUnknown(m)
}

var xxx_messageInfo_SessionArray proto.InternalMessageInfo

func (m *SessionArray) GetSessions() []*Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func init() {
	proto.RegisterType((*GetRequest)(nil), "repository.GetRequest")
	proto.RegisterType((*DeleteByIDRequest)(nil), "repository.DeleteByIDRequest")
	proto.RegisterType((*Session)(nil), "repository.Session")
	proto.RegisterType((*SessionArray)(nil), "repository.SessionArray")
}

func init() { proto.RegisterFile("session_service.proto", fileDescriptor_ff25770e79caedc0) }

var fileDescriptor_ff25770e79caedc0 = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x49, 0xff, 0x7f, 0xb7, 0x1f, 0x82, 0x57, 0x2d, 0x21, 0x22, 0x86, 0xb8, 0xc9, 0x6a,
	0x82, 0xd1, 0xbd, 0xa8, 0x95, 0xd2, 0x6d, 0xea, 0x5e, 0x52, 0x73, 0x2d, 0x03, 0x89, 0x13, 0x67,
	0x26, 0xc5, 0xe0, 0x7b, 0xf9, 0x7c, 0xe2, 0x24, 0x31, 0xa5, 0xcd, 0x6e, 0xce, 0x3d, 0xbf, 0x3b,
	0x73, 0x38, 0x03, 0x67, 0x8a, 0x94, 0xe2, 0xe2, 0xfd, 0x45, 0x91, 0xdc, 0xf2, 0x57, 0x62, 0xb9,
	0x14, 0x5a, 0x20, 0x48, 0xca, 0x85, 0xe2, 0x5a, 0xc8, 0xd2, 0x39, 0xdf, 0x08, 0xb1, 0x49, 0x29,
	0x30, 0xce, 0xba, 0x78, 0x0b, 0x28, 0xcb, 0x75, 0x59, 0x81, 0xce, 0xe5, 0xbe, 0xa9, 0x79, 0x46,
	0x4a, 0xc7, 0x59, 0x5e, 0x01, 0x9e, 0x07, 0xb0, 0x20, 0x1d, 0xd1, 0x47, 0x41, 0x4a, 0xe3, 0x29,
	0x0c, 0xb7, 0x71, 0x5a, 0x90, 0x6d, 0xb9, 0x96, 0xff, 0x2f, 0xaa, 0x84, 0x77, 0x05, 0xc7, 0x73,
	0x4a, 0x49, 0xd3, 0x43, 0xb9, 0x9c, 0x37, 0xe8, 0x11, 0xf4, 0x78, 0x62, 0xb8, 0x41, 0xd4, 0xe3,
	0x89, 0xf7, 0x05, 0xe3, 0x55, 0x95, 0x75, 0xdf, 0xc2, 0x19, 0x8c, 0x0a, 0x45, 0x72, 0x99, 0xd8,
	0x3d, 0x33, 0xab, 0x15, 0xde, 0xc2, 0x98, 0x3e, 0x73, 0x2e, 0x49, 0xd9, 0x7d, 0xd7, 0xf2, 0xa7,
	0xa1, 0xc3, 0xaa, 0xb8, 0xac, 0x89, 0xcb, 0x9e, 0x9b, 0xb8, 0x51, 0x83, 0x22, 0xc2, 0x20, 0x89,
	0x75, 0x6c, 0x0f, 0x4c, 0x44, 0x73, 0xf6, 0xee, 0xe0, 0x7f, 0xfd, 0xf8, 0xbd, 0x94, 0x71, 0x89,
	0x01, 0x4c, 0xea, 0xe2, 0x94, 0x6d, 0xb9, 0x7d, 0x7f, 0x1a, 0x9e, 0xb0, 0xb6, 0x32, 0x56, 0xb3,
	0xd1, 0x1f, 0x14, 0x7e, 0x5b, 0x30, 0xa9, 0xa7, 0x0a, 0x43, 0xe8, 0x2f, 0x48, 0xe3, 0x6c, 0x77,
	0xa5, 0x2d, 0xc9, 0xe9, 0xba, 0x0a, 0xaf, 0x61, 0xb8, 0xd2, 0x42, 0x12, 0x76, 0xb9, 0xdd, 0x2b,
	0x8f, 0x00, 0x6d, 0xad, 0x78, 0xb1, 0x8b, 0x1c, 0xd4, 0xed, 0xcc, 0x0e, 0xaa, 0x79, 0xfa, 0xfd,
	0xe6, 0xf5, 0xc8, 0xe8, 0x9b, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x68, 0xd8, 0x43, 0x51, 0x29,
	0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SessionsClient is the client API for Sessions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SessionsClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Session, error)
	Store(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error)
	DeleteByID(ctx context.Context, in *DeleteByIDRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type sessionsClient struct {
	cc *grpc.ClientConn
}

func NewSessionsClient(cc *grpc.ClientConn) SessionsClient {
	return &sessionsClient{cc}
}

func (c *sessionsClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/repository.Sessions/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) Store(ctx context.Context, in *Session, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/repository.Sessions/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sessionsClient) DeleteByID(ctx context.Context, in *DeleteByIDRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/repository.Sessions/DeleteByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SessionsServer is the server API for Sessions service.
type SessionsServer interface {
	Get(context.Context, *GetRequest) (*Session, error)
	Store(context.Context, *Session) (*Session, error)
	DeleteByID(context.Context, *DeleteByIDRequest) (*empty.Empty, error)
}

// UnimplementedSessionsServer can be embedded to have forward compatible implementations.
type UnimplementedSessionsServer struct {
}

func (*UnimplementedSessionsServer) Get(ctx context.Context, req *GetRequest) (*Session, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedSessionsServer) Store(ctx context.Context, req *Session) (*Session, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Store not implemented")
}
func (*UnimplementedSessionsServer) DeleteByID(ctx context.Context, req *DeleteByIDRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteByID not implemented")
}

func RegisterSessionsServer(s *grpc.Server, srv SessionsServer) {
	s.RegisterService(&_Sessions_serviceDesc, srv)
}

func _Sessions_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Sessions/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Session)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Sessions/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).Store(ctx, req.(*Session))
	}
	return interceptor(ctx, in, info, handler)
}

func _Sessions_DeleteByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SessionsServer).DeleteByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Sessions/DeleteByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SessionsServer).DeleteByID(ctx, req.(*DeleteByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sessions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "repository.Sessions",
	HandlerType: (*SessionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Sessions_Get_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _Sessions_Store_Handler,
		},
		{
			MethodName: "DeleteByID",
			Handler:    _Sessions_DeleteByID_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "session_service.proto",
}
