// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user_service.proto

package repository

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FetchRequest struct {
	Count                uint64   `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchRequest) Reset()         { *m = FetchRequest{} }
func (m *FetchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()    {}
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{0}
}

func (m *FetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRequest.Unmarshal(m, b)
}
func (m *FetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRequest.Marshal(b, m, deterministic)
}
func (m *FetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRequest.Merge(m, src)
}
func (m *FetchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRequest.Size(m)
}
func (m *FetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRequest proto.InternalMessageInfo

func (m *FetchRequest) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetByIDRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByIDRequest) Reset()         { *m = GetByIDRequest{} }
func (m *GetByIDRequest) String() string { return proto.CompactTextString(m) }
func (*GetByIDRequest) ProtoMessage()    {}
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{1}
}

func (m *GetByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByIDRequest.Unmarshal(m, b)
}
func (m *GetByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByIDRequest.Marshal(b, m, deterministic)
}
func (m *GetByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByIDRequest.Merge(m, src)
}
func (m *GetByIDRequest) XXX_Size() int {
	return xxx_messageInfo_GetByIDRequest.Size(m)
}
func (m *GetByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByIDRequest proto.InternalMessageInfo

func (m *GetByIDRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type GetByEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByEmailRequest) Reset()         { *m = GetByEmailRequest{} }
func (m *GetByEmailRequest) String() string { return proto.CompactTextString(m) }
func (*GetByEmailRequest) ProtoMessage()    {}
func (*GetByEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{2}
}

func (m *GetByEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByEmailRequest.Unmarshal(m, b)
}
func (m *GetByEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByEmailRequest.Marshal(b, m, deterministic)
}
func (m *GetByEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByEmailRequest.Merge(m, src)
}
func (m *GetByEmailRequest) XXX_Size() int {
	return xxx_messageInfo_GetByEmailRequest.Size(m)
}
func (m *GetByEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByEmailRequest proto.InternalMessageInfo

func (m *GetByEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type GetByNicknameRequest struct {
	Nickname             string   `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AuthID               uint64   `protobuf:"varint,2,opt,name=authID,proto3" json:"authID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetByNicknameRequest) Reset()         { *m = GetByNicknameRequest{} }
func (m *GetByNicknameRequest) String() string { return proto.CompactTextString(m) }
func (*GetByNicknameRequest) ProtoMessage()    {}
func (*GetByNicknameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{3}
}

func (m *GetByNicknameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetByNicknameRequest.Unmarshal(m, b)
}
func (m *GetByNicknameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetByNicknameRequest.Marshal(b, m, deterministic)
}
func (m *GetByNicknameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetByNicknameRequest.Merge(m, src)
}
func (m *GetByNicknameRequest) XXX_Size() int {
	return xxx_messageInfo_GetByNicknameRequest.Size(m)
}
func (m *GetByNicknameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetByNicknameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetByNicknameRequest proto.InternalMessageInfo

func (m *GetByNicknameRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *GetByNicknameRequest) GetAuthID() uint64 {
	if m != nil {
		return m.AuthID
	}
	return 0
}

type UpdatePasswordRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdatePasswordRequest) Reset()         { *m = UpdatePasswordRequest{} }
func (m *UpdatePasswordRequest) String() string { return proto.CompactTextString(m) }
func (*UpdatePasswordRequest) ProtoMessage()    {}
func (*UpdatePasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{4}
}

func (m *UpdatePasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdatePasswordRequest.Unmarshal(m, b)
}
func (m *UpdatePasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdatePasswordRequest.Marshal(b, m, deterministic)
}
func (m *UpdatePasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdatePasswordRequest.Merge(m, src)
}
func (m *UpdatePasswordRequest) XXX_Size() int {
	return xxx_messageInfo_UpdatePasswordRequest.Size(m)
}
func (m *UpdatePasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdatePasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdatePasswordRequest proto.InternalMessageInfo

func (m *UpdatePasswordRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UpdateRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{5}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRequest) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *UpdateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type GetFollowRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Count                uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Offset               uint64   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFollowRequest) Reset()         { *m = GetFollowRequest{} }
func (m *GetFollowRequest) String() string { return proto.CompactTextString(m) }
func (*GetFollowRequest) ProtoMessage()    {}
func (*GetFollowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{6}
}

func (m *GetFollowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFollowRequest.Unmarshal(m, b)
}
func (m *GetFollowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFollowRequest.Marshal(b, m, deterministic)
}
func (m *GetFollowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFollowRequest.Merge(m, src)
}
func (m *GetFollowRequest) XXX_Size() int {
	return xxx_messageInfo_GetFollowRequest.Size(m)
}
func (m *GetFollowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFollowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFollowRequest proto.InternalMessageInfo

func (m *GetFollowRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetFollowRequest) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetFollowRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type GetFollowResponse struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	Total                uint64   `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFollowResponse) Reset()         { *m = GetFollowResponse{} }
func (m *GetFollowResponse) String() string { return proto.CompactTextString(m) }
func (*GetFollowResponse) ProtoMessage()    {}
func (*GetFollowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{7}
}

func (m *GetFollowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFollowResponse.Unmarshal(m, b)
}
func (m *GetFollowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFollowResponse.Marshal(b, m, deterministic)
}
func (m *GetFollowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFollowResponse.Merge(m, src)
}
func (m *GetFollowResponse) XXX_Size() int {
	return xxx_messageInfo_GetFollowResponse.Size(m)
}
func (m *GetFollowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFollowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFollowResponse proto.InternalMessageInfo

func (m *GetFollowResponse) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *GetFollowResponse) GetTotal() uint64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type FindLikeRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Count                uint64   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindLikeRequest) Reset()         { *m = FindLikeRequest{} }
func (m *FindLikeRequest) String() string { return proto.CompactTextString(m) }
func (*FindLikeRequest) ProtoMessage()    {}
func (*FindLikeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{8}
}

func (m *FindLikeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindLikeRequest.Unmarshal(m, b)
}
func (m *FindLikeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindLikeRequest.Marshal(b, m, deterministic)
}
func (m *FindLikeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindLikeRequest.Merge(m, src)
}
func (m *FindLikeRequest) XXX_Size() int {
	return xxx_messageInfo_FindLikeRequest.Size(m)
}
func (m *FindLikeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindLikeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindLikeRequest proto.InternalMessageInfo

func (m *FindLikeRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FindLikeRequest) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type User struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Nickname             string   `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	PlainPassword        string   `protobuf:"bytes,4,opt,name=plainPassword,proto3" json:"plainPassword,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Avatar               string   `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Role                 int32    `protobuf:"varint,7,opt,name=role,proto3" json:"role,omitempty"`
	Access               int32    `protobuf:"varint,8,opt,name=access,proto3" json:"access,omitempty"`
	Subscription         bool     `protobuf:"varint,9,opt,name=subscription,proto3" json:"subscription,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{9}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPlainPassword() string {
	if m != nil {
		return m.PlainPassword
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *User) GetRole() int32 {
	if m != nil {
		return m.Role
	}
	return 0
}

func (m *User) GetAccess() int32 {
	if m != nil {
		return m.Access
	}
	return 0
}

func (m *User) GetSubscription() bool {
	if m != nil {
		return m.Subscription
	}
	return false
}

type UserArray struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserArray) Reset()         { *m = UserArray{} }
func (m *UserArray) String() string { return proto.CompactTextString(m) }
func (*UserArray) ProtoMessage()    {}
func (*UserArray) Descriptor() ([]byte, []int) {
	return fileDescriptor_292f630cd9eb4c90, []int{10}
}

func (m *UserArray) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserArray.Unmarshal(m, b)
}
func (m *UserArray) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserArray.Marshal(b, m, deterministic)
}
func (m *UserArray) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserArray.Merge(m, src)
}
func (m *UserArray) XXX_Size() int {
	return xxx_messageInfo_UserArray.Size(m)
}
func (m *UserArray) XXX_DiscardUnknown() {
	xxx_messageInfo_UserArray.DiscardUnknown(m)
}

var xxx_messageInfo_UserArray proto.InternalMessageInfo

func (m *UserArray) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func init() {
	proto.RegisterType((*FetchRequest)(nil), "repository.FetchRequest")
	proto.RegisterType((*GetByIDRequest)(nil), "repository.GetByIDRequest")
	proto.RegisterType((*GetByEmailRequest)(nil), "repository.GetByEmailRequest")
	proto.RegisterType((*GetByNicknameRequest)(nil), "repository.GetByNicknameRequest")
	proto.RegisterType((*UpdatePasswordRequest)(nil), "repository.UpdatePasswordRequest")
	proto.RegisterType((*UpdateRequest)(nil), "repository.UpdateRequest")
	proto.RegisterType((*GetFollowRequest)(nil), "repository.GetFollowRequest")
	proto.RegisterType((*GetFollowResponse)(nil), "repository.GetFollowResponse")
	proto.RegisterType((*FindLikeRequest)(nil), "repository.FindLikeRequest")
	proto.RegisterType((*User)(nil), "repository.User")
	proto.RegisterType((*UserArray)(nil), "repository.UserArray")
}

func init() { proto.RegisterFile("user_service.proto", fileDescriptor_292f630cd9eb4c90) }

var fileDescriptor_292f630cd9eb4c90 = []byte{
	// 593 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x7f, 0x6b, 0xd3, 0x40,
	0x18, 0x26, 0x5d, 0xd2, 0xb5, 0xaf, 0x5b, 0x9d, 0xc7, 0x36, 0x62, 0xe6, 0x20, 0x1e, 0x43, 0x2a,
	0x42, 0x06, 0x1b, 0xa2, 0x20, 0x0a, 0xba, 0xad, 0x63, 0x4e, 0x64, 0x8b, 0xf4, 0x6f, 0x49, 0xd3,
	0x6b, 0x77, 0x2c, 0xcd, 0xc5, 0xbb, 0xcb, 0x46, 0x3f, 0x82, 0x5f, 0xd7, 0x4f, 0x20, 0xb9, 0xfc,
	0x58, 0xae, 0x69, 0x45, 0xd8, 0x7f, 0x79, 0xee, 0x7d, 0xee, 0x79, 0x7f, 0xe5, 0x39, 0x40, 0xa9,
	0x20, 0xfc, 0xa7, 0x20, 0xfc, 0x8e, 0x86, 0xc4, 0x4b, 0x38, 0x93, 0x0c, 0x01, 0x27, 0x09, 0x13,
	0x54, 0x32, 0x3e, 0x77, 0xf6, 0xa6, 0x8c, 0x4d, 0x23, 0x72, 0xa8, 0x22, 0xa3, 0x74, 0x72, 0x48,
	0x66, 0x89, 0x9c, 0xe7, 0x44, 0x7c, 0x00, 0x1b, 0x03, 0x22, 0xc3, 0x1b, 0x9f, 0xfc, 0x4a, 0x89,
	0x90, 0x68, 0x1b, 0xac, 0x90, 0xa5, 0xb1, 0xb4, 0x0d, 0xd7, 0xe8, 0x9b, 0x7e, 0x0e, 0xb0, 0x0b,
	0xbd, 0x73, 0x22, 0xbf, 0xcc, 0x2f, 0x4e, 0x4b, 0x5e, 0x0f, 0x5a, 0x74, 0x5c, 0x90, 0x5a, 0x74,
	0x8c, 0x5f, 0xc3, 0x33, 0xc5, 0x38, 0x9b, 0x05, 0x34, 0xaa, 0x89, 0x91, 0x0c, 0x2b, 0x5e, 0xd7,
	0xcf, 0x01, 0xfe, 0x0a, 0xdb, 0x8a, 0xfa, 0x9d, 0x86, 0xb7, 0x71, 0x30, 0x23, 0x25, 0xdb, 0x81,
	0x4e, 0x5c, 0x1c, 0x15, 0x17, 0x2a, 0x8c, 0x76, 0xa1, 0x1d, 0xa4, 0xf2, 0xe6, 0xe2, 0xd4, 0x6e,
	0xa9, 0x94, 0x05, 0xc2, 0x27, 0xb0, 0x33, 0x4c, 0xc6, 0x81, 0x24, 0x57, 0x81, 0x10, 0xf7, 0x8c,
	0x8f, 0x57, 0xd4, 0x97, 0x89, 0x27, 0x05, 0x45, 0x49, 0x74, 0xfd, 0x0a, 0xe3, 0x6b, 0xd8, 0xcc,
	0x45, 0xfe, 0x71, 0xb9, 0xaa, 0xac, 0xb5, 0x50, 0x59, 0xd5, 0xe3, 0x5a, 0xbd, 0xc7, 0x2b, 0xd8,
	0x3a, 0x27, 0x72, 0xc0, 0xa2, 0x88, 0xdd, 0xaf, 0x52, 0xad, 0x46, 0xdd, 0xaa, 0x8d, 0x3a, 0xeb,
	0x94, 0x4d, 0x26, 0x82, 0x48, 0x25, 0x68, 0xfa, 0x05, 0xc2, 0xd7, 0x6a, 0xc0, 0xa5, 0xa2, 0x48,
	0x58, 0x2c, 0x08, 0x7a, 0x05, 0x56, 0xb6, 0x7c, 0x61, 0x1b, 0xee, 0x5a, 0xff, 0xc9, 0xd1, 0x96,
	0xf7, 0xb0, 0x76, 0x6f, 0x28, 0x08, 0xf7, 0xf3, 0x70, 0x96, 0x4a, 0x32, 0x19, 0x44, 0x65, 0x2a,
	0x05, 0xf0, 0x07, 0x78, 0x3a, 0xa0, 0xf1, 0xf8, 0x1b, 0xbd, 0xad, 0x3a, 0x47, 0x60, 0xd6, 0xe6,
	0x6f, 0x96, 0x1d, 0x36, 0xeb, 0xc4, 0x7f, 0x0c, 0x30, 0xb3, 0x14, 0x8f, 0x1f, 0x16, 0x3a, 0x80,
	0xcd, 0x24, 0x0a, 0x68, 0x5c, 0xee, 0xd0, 0x36, 0x55, 0x54, 0x3f, 0xd4, 0x36, 0x68, 0xe9, 0x1b,
	0x54, 0xbf, 0xc7, 0x5d, 0x20, 0x03, 0x6e, 0xb7, 0x55, 0xa4, 0x40, 0x59, 0x3b, 0x9c, 0x45, 0xc4,
	0x5e, 0x77, 0x8d, 0xbe, 0xe5, 0xab, 0x6f, 0xc5, 0x0d, 0x43, 0x22, 0x84, 0xdd, 0x51, 0xa7, 0x05,
	0x42, 0x18, 0x36, 0x44, 0x3a, 0x12, 0x21, 0xa7, 0x89, 0xa4, 0x2c, 0xb6, 0xbb, 0xae, 0xd1, 0xef,
	0xf8, 0xda, 0x19, 0x3e, 0x86, 0x6e, 0xd6, 0xf3, 0x67, 0xce, 0x83, 0xf9, 0xff, 0x0e, 0xff, 0xe8,
	0xb7, 0x05, 0xd6, 0x50, 0xad, 0xe1, 0x3d, 0x58, 0xca, 0x6c, 0xc8, 0xae, 0x73, 0xeb, 0xfe, 0x73,
	0x76, 0x16, 0x55, 0xf2, 0x5c, 0xef, 0x60, 0xbd, 0x30, 0x20, 0x72, 0xea, 0x0c, 0xdd, 0x95, 0x4e,
	0xa3, 0x06, 0xf4, 0x11, 0xe0, 0xc1, 0x97, 0x68, 0xbf, 0x71, 0xb7, 0xee, 0xd7, 0x25, 0xd7, 0x4f,
	0x60, 0x53, 0xf3, 0x2a, 0x72, 0x1b, 0x0a, 0x0b, 0x36, 0x5e, 0x22, 0xf2, 0x06, 0xac, 0x1f, 0x92,
	0x71, 0x82, 0x1a, 0xa1, 0x25, 0xe4, 0x4b, 0xe8, 0xe9, 0x8e, 0x46, 0x2f, 0x35, 0xce, 0x32, 0xb7,
	0x3b, 0xbb, 0x5e, 0xfe, 0xc6, 0x79, 0xe5, 0x1b, 0xe7, 0x9d, 0x65, 0x6f, 0x1c, 0x7a, 0x0b, 0xed,
	0xfc, 0x02, 0x7a, 0xde, 0x14, 0x59, 0x5d, 0xf0, 0x25, 0x6c, 0x54, 0x5e, 0xcb, 0xf6, 0xf6, 0x62,
	0xa1, 0x69, 0xcd, 0xd7, 0xce, 0xfe, 0x8a, 0x68, 0xe1, 0xd1, 0xba, 0x18, 0x8d, 0xa7, 0x8f, 0x13,
	0xfb, 0x04, 0x9d, 0xd2, 0xb2, 0x68, 0x4f, 0xfb, 0x89, 0x74, 0x23, 0xaf, 0xf8, 0x8f, 0x46, 0x6d,
	0x35, 0xa0, 0xe3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x52, 0x57, 0x29, 0x1e, 0x34, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UsersClient is the client API for Users service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UsersClient interface {
	Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*UserArray, error)
	GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*User, error)
	GetByEmail(ctx context.Context, in *GetByEmailRequest, opts ...grpc.CallOption) (*User, error)
	GetByNickname(ctx context.Context, in *GetByNicknameRequest, opts ...grpc.CallOption) (*User, error)
	Store(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*User, error)
	GetFollowers(ctx context.Context, in *GetFollowRequest, opts ...grpc.CallOption) (*GetFollowResponse, error)
	GetFollowing(ctx context.Context, in *GetFollowRequest, opts ...grpc.CallOption) (*GetFollowResponse, error)
	FindLike(ctx context.Context, in *FindLikeRequest, opts ...grpc.CallOption) (*UserArray, error)
}

type usersClient struct {
	cc *grpc.ClientConn
}

func NewUsersClient(cc *grpc.ClientConn) UsersClient {
	return &usersClient{cc}
}

func (c *usersClient) Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*UserArray, error) {
	out := new(UserArray)
	err := c.cc.Invoke(ctx, "/repository.Users/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetByID(ctx context.Context, in *GetByIDRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/repository.Users/GetByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetByEmail(ctx context.Context, in *GetByEmailRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/repository.Users/GetByEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetByNickname(ctx context.Context, in *GetByNicknameRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/repository.Users/GetByNickname", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Store(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/repository.Users/Store", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) UpdatePassword(ctx context.Context, in *UpdatePasswordRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/repository.Users/UpdatePassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/repository.Users/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetFollowers(ctx context.Context, in *GetFollowRequest, opts ...grpc.CallOption) (*GetFollowResponse, error) {
	out := new(GetFollowResponse)
	err := c.cc.Invoke(ctx, "/repository.Users/GetFollowers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) GetFollowing(ctx context.Context, in *GetFollowRequest, opts ...grpc.CallOption) (*GetFollowResponse, error) {
	out := new(GetFollowResponse)
	err := c.cc.Invoke(ctx, "/repository.Users/GetFollowing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *usersClient) FindLike(ctx context.Context, in *FindLikeRequest, opts ...grpc.CallOption) (*UserArray, error) {
	out := new(UserArray)
	err := c.cc.Invoke(ctx, "/repository.Users/FindLike", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UsersServer is the server API for Users service.
type UsersServer interface {
	Fetch(context.Context, *FetchRequest) (*UserArray, error)
	GetByID(context.Context, *GetByIDRequest) (*User, error)
	GetByEmail(context.Context, *GetByEmailRequest) (*User, error)
	GetByNickname(context.Context, *GetByNicknameRequest) (*User, error)
	Store(context.Context, *User) (*User, error)
	UpdatePassword(context.Context, *UpdatePasswordRequest) (*empty.Empty, error)
	Update(context.Context, *UpdateRequest) (*User, error)
	GetFollowers(context.Context, *GetFollowRequest) (*GetFollowResponse, error)
	GetFollowing(context.Context, *GetFollowRequest) (*GetFollowResponse, error)
	FindLike(context.Context, *FindLikeRequest) (*UserArray, error)
}

// UnimplementedUsersServer can be embedded to have forward compatible implementations.
type UnimplementedUsersServer struct {
}

func (*UnimplementedUsersServer) Fetch(ctx context.Context, req *FetchRequest) (*UserArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fetch not implemented")
}
func (*UnimplementedUsersServer) GetByID(ctx context.Context, req *GetByIDRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByID not implemented")
}
func (*UnimplementedUsersServer) GetByEmail(ctx context.Context, req *GetByEmailRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByEmail not implemented")
}
func (*UnimplementedUsersServer) GetByNickname(ctx context.Context, req *GetByNicknameRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetByNickname not implemented")
}
func (*UnimplementedUsersServer) Store(ctx context.Context, req *User) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Store not implemented")
}
func (*UnimplementedUsersServer) UpdatePassword(ctx context.Context, req *UpdatePasswordRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePassword not implemented")
}
func (*UnimplementedUsersServer) Update(ctx context.Context, req *UpdateRequest) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedUsersServer) GetFollowers(ctx context.Context, req *GetFollowRequest) (*GetFollowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowers not implemented")
}
func (*UnimplementedUsersServer) GetFollowing(ctx context.Context, req *GetFollowRequest) (*GetFollowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFollowing not implemented")
}
func (*UnimplementedUsersServer) FindLike(ctx context.Context, req *FindLikeRequest) (*UserArray, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindLike not implemented")
}

func RegisterUsersServer(s *grpc.Server, srv UsersServer) {
	s.RegisterService(&_Users_serviceDesc, srv)
}

func _Users_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Fetch(ctx, req.(*FetchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/GetByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetByID(ctx, req.(*GetByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetByEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetByEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/GetByEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetByEmail(ctx, req.(*GetByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetByNickname_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetByNicknameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetByNickname(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/GetByNickname",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetByNickname(ctx, req.(*GetByNicknameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Store_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Store(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/Store",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Store(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_UpdatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).UpdatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/UpdatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).UpdatePassword(ctx, req.(*UpdatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetFollowers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetFollowers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/GetFollowers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetFollowers(ctx, req.(*GetFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_GetFollowing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).GetFollowing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/GetFollowing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).GetFollowing(ctx, req.(*GetFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Users_FindLike_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindLikeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UsersServer).FindLike(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/repository.Users/FindLike",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UsersServer).FindLike(ctx, req.(*FindLikeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Users_serviceDesc = grpc.ServiceDesc{
	ServiceName: "repository.Users",
	HandlerType: (*UsersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fetch",
			Handler:    _Users_Fetch_Handler,
		},
		{
			MethodName: "GetByID",
			Handler:    _Users_GetByID_Handler,
		},
		{
			MethodName: "GetByEmail",
			Handler:    _Users_GetByEmail_Handler,
		},
		{
			MethodName: "GetByNickname",
			Handler:    _Users_GetByNickname_Handler,
		},
		{
			MethodName: "Store",
			Handler:    _Users_Store_Handler,
		},
		{
			MethodName: "UpdatePassword",
			Handler:    _Users_UpdatePassword_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Users_Update_Handler,
		},
		{
			MethodName: "GetFollowers",
			Handler:    _Users_GetFollowers_Handler,
		},
		{
			MethodName: "GetFollowing",
			Handler:    _Users_GetFollowing_Handler,
		},
		{
			MethodName: "FindLike",
			Handler:    _Users_FindLike_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user_service.proto",
}
